#!/usr/bin/osascript
global mic_element
global camera_element

on run argv
    set mic_element to "document.querySelectorAll(\"[data-capture-type=sI3MNd]\")[0].querySelectorAll(\"[data-is-muted]\")[0]"
    set camera_element to "document.querySelectorAll(\"[data-capture-type=stqyie]\")[0].querySelectorAll(\"[data-is-muted]\")[0]"
    if count of argv is 0 then
        log "Usage: cmds... [id]"
        log "cmds:
    status - finds and logs meets
    goto - navigates to meet [id] or first if not specified. breaks mute of \"all\".
    mm - mutes mic for meet [id] or all if not specified
    mc - mutes camera for meet [id] or all if not specified
    toggle - toggles audio for meet [id] or all if not specified\n
    ma - mutes out audio for meet [id] or all if not specified
    uma - unmutes out audio for meet [id] or all if not specified
cmds apart from status can be combined. eg. \"goto mm\" navigates and mutes the first meet found"
    else
        set cmds to {"status", "goto", "mm", "mc", "toggle", "ma", "uma"}
        set cmd to {meet: null, set_active: false, mute_mic: false, mute_video: false, toggle_mic: false, mute: false, unmute: false} as record
        set |id| to last item of argv
        if |id| is not in cmds then
            set meet of cmd to |id|
        end if
        repeat with arg in argv
            if contents of arg is "status" then
                set meets to find_meets()
                log "NAME\t\t\tMIC MUTED\t\tCAMERA MUTED\tURL"
                repeat with meet in meets
                    log (get |name| of meet) & "\t" & mic_off of meet & "\t\t\t" & video_off of meet & "\t\t" & link of meet
                end repeat
                return
            end if
            if contents of arg is "goto" then set set_active of cmd to true
            if contents of arg is "mm" then set mute_mic of cmd to true
            if contents of arg is "mc" then set mute_video of cmd to true
            if contents of arg is "toggle" then set toggle_mic of cmd to true
            if contents of arg is "ma" then set mute of cmd to true
            if contents of arg is "uma" then set unmute of cmd to true
        end repeat

        cmd_meets(cmd)
    end if
    return
end run

on find_meets()
    set meets to {}
    tell application "Google Chrome"
        repeat with t in (every tabs of windows whose URL starts with "https://meet.google.com")
            set meet to {|name|: {}, link: {}, mic_off: {}, video_off: {}} as record
            set link of meet to (get URL of t)
            set |name| of meet to (get name of t)
            tell t
                set mic_off of meet to (execute javascript mic_element & ".getAttribute(\"data-is-muted\");") as boolean
                set video_off of meet to (execute javascript camera_element & ".getAttribute(\"data-is-muted\");") as boolean
            end tell
            put meet to end of meets
        end repeat
    end tell
    return meets
end find_meets

on cmd_meets(cmd)
    tell application "Google Chrome"
        set window_index to 0
        repeat with w in (windows)
            set tab_index to 1
            repeat with t in (tabs of w)
                if URL of t starts with "https://meet.google.com" and (meet of cmd is null or URL of t contains meet of cmd) then
                    if toggle_mic of cmd then
                        log "toggles mic in \"" & (get name of t) & "\""
                        tell t to execute javascript mic_element & ".click();"
                    end if
                    if mute_mic of cmd then
                        log "mutes mic in \"" & (get name of t) & "\""
                        tell t
                            set mic_off to (execute javascript mic_element & ".getAttribute(\"data-is-muted\");") as boolean
                            if not mic_off then
                                execute javascript mic_element & ".click();"
                            end if
                        end tell
                    end if
                    if mute_video of cmd then
                        log "mutes camera in \"" & (get name of t) & "\""
                        tell t
                            set video_off to (execute javascript camera_element & ".getAttribute(\"data-is-muted\");") as boolean
                            if not video_off then
                                execute javascript camera_element & ".click();"
                            end if
                        end tell
                    end if
                    if mute of cmd is true then
                        log "mutes out audio in \"" & (get name of t) & "\""
                        tell t to execute javascript "Array.from(document.querySelectorAll(\"audio\")).forEach(function(a){a.muted=!0});"
                    end if
                    if unmute of cmd is true then
                        log "unmutes out audio in \"" & (get name of t) & "\""
                        tell t to execute javascript "Array.from(document.querySelectorAll(\"audio\")).forEach(function(a){a.muted=!1});"
                    end if
                    if set_active of cmd is true then
                        log "navigating to \"" & (get name of t) & "\" at " & (get URL of t)
                        activate
                        set (active tab index of w) to (tab_index)
                        set index of w to 1
                        return
                    end
                end if
                set tab_index to tab_index + 1
            end repeat
            set window_index to window_index + 1
        end repeat
    end tell
end cmd_meets